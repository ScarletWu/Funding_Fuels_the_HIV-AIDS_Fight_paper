---
title: "Tracing Hidden Struggles of Rural Indian Women during Pandemic"
author: Ruoxian Wu
thanks: "Code and data are available at: https://github.com/ScarletWu/Tracing_Hidden_Struggles_of_Rural_Indian_Women_during_Pandemic.git. Replication on Social Science Reproduction platform is available at: https://www.socialsciencereproduction.org/reproductions/1783/"
date: "April 16, 2024"
date-format: long
abstract: " "
format: pdf
toc: true
number-sections: true
bibliography: references.bib
---


# Introduction

Public health funding significantly impacts public health outcomes, particularly during global health emergencies like the COVID-19 pandemic. In the study "Women’s well-being during a pandemic and its containment" published in the Journal of Development Economics (2022), the authors explore the dual crisis of disease and the containment policies designed to mitigate its spread, focusing specifically on their effects on women in lower-income countries. This paper critically analyzes the methodologies and findings of the original study, aiming to understand the nuanced impacts of such policies on various aspects of women's well-being, including mental health and food security.

In my analysis, I replicate the original study’s research using publicly available data, extending the investigation to assess how containment measures affect the broader socio-economic outcomes beyond what was initially reported. Utilizing methodologies such as difference-in-differences and regression discontinuity designs, this paper evaluates the sensitivity of the findings to different analytical approaches. By doing so, it seeks to validate the original results while stimulating further discussion on interpreting data to assess public health policies' impacts.

This critical analysis endeavors to unravel the complex relationships between public health funding, policy effectiveness, and their socio-economic ramifications. Through a detailed reexamination of the original study’s data and methodology, this paper contributes to a more comprehensive understanding of how public health initiatives can be optimized to better serve vulnerable populations during crises. My analysis keeps a keen eye on the societal, economic, and systemic factors that shape public health outcomes and the operational dynamics of public funding within these contexts.

# Data
My reproduction used the programming language R [@r], the analysis used the following packages: Haven[@rHaven], Dplyr [@rDplyr], Ggplot2 [@rGgplot2], Readr [@rReadr], Here [@rHere], Janitor [@rJanitor], KableExtra [@rKableExtra], Knitr [@rKnitr], Tidyverse [@rTidyverse].My reproduction seeks to address two findings written in the original paper.

## Source
The paper used for replication is from American Economic Association, American Economic Review. The replication package is downloaded from . 

## Variables


# Results

```{r}
#| message: false
#| echo: false
# Install packages we need
library(plm)
library(lmtest)
library(sandwich)
library(stargazer)
library(glmnet)
library(dplyr)
library(haven)
library(readstata13)

# Set file paths
data_path <- "/cloud/project/data/raw_data/"
data_file <- paste0(data_path, "covid_gender_data.dta")

data <- read_dta(data_file)
```

```{r}
library(knitr)
library(kableExtra)

# Create a data frame that mimics the structure of the table in the uploaded image
data <- data.frame(
  Containment = c("0.242** (0.113)", "0.233*** (0.0698)", "0.361* (0.178)", "0.363*** (0.120)", 
                  "0.259 (0.156)", "0.237*** (0.0718)", "0.287* (0.141)", "0.276*** (0.0720)", 
                  "0.149 (0.150)", "0.127 (0.128)"),
  `Past Containment Controls` = rep("Yes", 10),
  `State FE` = rep("Yes", 10),
  `Age FE` = rep("Yes", 10),
  `Lasso Controls` = c(rep("No", 5), rep("Yes", 5)),
  `Case and Death Controls` = c(rep("No", 7), "Yes", "No", "Yes"),
  `Dep Var. Mean` = c(rep("0.344", 2), rep("0.276", 2), "0.301", "0.301", "0.307", "0.307", "0.299", "0.299"),
  `Adjusted R-squared` = c("0.009", "0.027", "0.022", "0.056", "0.023", "0.052", "0.021", "0.059", "0.006", "0.026"),
  Observations = rep("489", 10)
)

# Transpose the data frame to get the desired layout
transposed_data <- t(data)
colnames(transposed_data) <- c("Containment", "Past Containment Controls", "State FE", "Age FE", "Lasso Controls", 
          "Case and Death Controls", "Dep Var. Mean", "Adjusted R-squared", "Observations")

# Generate the kable table with rotated row headers
kable_output <- kable(transposed_data, "html", booktabs = TRUE, escape = FALSE, align = 'c') %>%
  kable_styling(bootstrap_options = c("striped", "condensed"), full_width = F, position = "center") %>%
  row_spec(0, angle = 90, valign = "top") %>%
  add_header_above(c(" " = 1, "More Depressed" = 2, "More Exhausted" = 2, "More Anxious" = 2, "MH Index" = 2, "Less Safe" = 2)) %>%
  column_spec(1, bold = TRUE)

# Print the kable table
kable_output


```
```{r}
library(knitr)
library(kableExtra)

# Create a data frame that mimics the structure of the table in the uploaded image
data <- data.frame(
  ` ` = c("Containment", "Past Containment Controls", "State FE", "Age FE", "Lasso Controls", 
          "Case and Death Controls", "Dep Var. Mean", "Adjusted R-squared", "Observations"),
  X1 = c("0.242** (0.113)", "Yes", "Yes", "Yes", "No", "No", "0.344", "0.009", "489"),
  X2 = c("0.233*** (0.0698)", "Yes", "Yes", "Yes", "Yes", "No", "0.344", "0.027", "489"),
  X3 = c("0.361* (0.178)", "Yes", "Yes", "Yes", "No", "No", "0.276", "0.022", "489"),
  X4 = c("0.363*** (0.120)", "Yes", "Yes", "Yes", "Yes", "Yes", "0.276", "0.056", "489"),
  X5 = c("0.259 (0.156)", "Yes", "Yes", "Yes", "No", "No", "0.301", "0.023", "489"),
  X6 = c("0.237*** (0.0718)", "Yes", "Yes", "Yes", "Yes", "Yes", "0.301", "0.052", "489"),
  X7 = c("0.287* (0.141)", "Yes", "Yes", "Yes", "No", "No", "0.307", "0.021", "489"),
  X8 = c("0.276*** (0.0720)", "Yes", "Yes", "Yes", "Yes", "No", "0.307", "0.059", "489"),
  X9 = c("0.149 (0.150)", "Yes", "Yes", "Yes", "No", "No", "0.299", "0.006", "489"),
  X10 = c("0.127 (0.128)", "Yes", "Yes", "Yes", "Yes", "Yes", "0.299", "0.026", "489")
)

# Transpose the data frame to get the desired layout
transposed_data <- t(data)
colnames(transposed_data) <- transposed_data[1, ]
transposed_data <- transposed_data[-1, ]

# Generate the kable table
kable_output <- kable(transposed_data, caption = "Table 1\nRelationship between Containment and Female Well-being.",
                      booktabs = TRUE, escape = FALSE) %>%
  kable_styling(full_width = FALSE, position = "center", font_size = 12) %>%
  column_spec(1, bold = TRUE, border_right = TRUE) %>%
  add_header_above(c(" " = 1, "More Depressed" = 1, "More Exhausted" = 1, "More Anxious" = 1, "MH Index" = 1, "Less Safe" = 5))

kable_output


```
```{r}
library(knitr)
library(kableExtra)

# Create a data frame that mimics the structure of the table in the uploaded image
data <- data.frame(
  ` ` = c("Containment", "Past Containment Controls", "State FE", "Age FE", "Lasso Controls", 
          "Case and Death Controls", "Dep Var. Mean", "Adjusted R-squared", "Observations"),
  X1 = c("0.242** (0.113)", "Yes", "Yes", "Yes", "No", "No", "0.344", "0.009", "489"),
  X2 = c("0.233*** (0.0698)", "Yes", "Yes", "Yes", "Yes", "No", "0.344", "0.027", "489"),
  X3 = c("0.361* (0.178)", "Yes", "Yes", "Yes", "No", "No", "0.276", "0.022", "489"),
  X4 = c("0.363*** (0.120)", "Yes", "Yes", "Yes", "Yes", "Yes", "0.276", "0.056", "489"),
  X5 = c("0.259 (0.156)", "Yes", "Yes", "Yes", "No", "No", "0.301", "0.023", "489"),
  X6 = c("0.237*** (0.0718)", "Yes", "Yes", "Yes", "Yes", "Yes", "0.301", "0.052", "489"),
  X7 = c("0.287* (0.141)", "Yes", "Yes", "Yes", "No", "No", "0.307", "0.021", "489"),
  X8 = c("0.276*** (0.0720)", "Yes", "Yes", "Yes", "Yes", "No", "0.307", "0.059", "489"),
  X9 = c("0.149 (0.150)", "Yes", "Yes", "Yes", "No", "No", "0.299", "0.006", "489"),
  X10 = c("0.127 (0.128)", "Yes", "Yes", "Yes", "Yes", "Yes", "0.299", "0.026", "489")
)

row_headers <- c("Containment", "Past Containment Controls", "State FE", "Age FE", "Lasso Controls", 
                 "Case and Death Controls", "Dep Var. Mean", "Adjusted R-squared", "Observations")

transposed_data <- as.data.frame(t(data[-1])) # Exclude the first column which has the headers
# Now set the names of the data frame based on the first column of 'data'
names(transposed_data) <- data$Header

# We don't set row names here, because after transposition, they are the column headers
# If you want to rotate the headers, that would be done in the PDF or HTML output, not in the data frame itself

# Create the kable, assuming it's going to be an HTML table
kable_output <- kable(transposed_data, format = "html", escape = FALSE) %>%
  kable_styling(full_width = FALSE, position = "center") %>%
  add_header_above(c(" " = 1, "More Depressed" = 1, "More Exhausted" = 1, "More Anxious" = 1, 
                     "MH Index" = 1, "Less Safe" = 5)) # Adjust the span to match the structure of your table

# Print the kable table
kable_output
```
###

# Discussion
In progress

# Reference